{"version":3,"sources":["nav/Nav.js","home/Home.js","editing_window/EditingWindow.js","WebAPI.js","post_list/post_list.js","posts/post.js","about/About.js","footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["TheNavbar","props","handleScroll","lastPositonY","state","positionY","setState","window","pageYOffset","calculateScrollWidth","movedY","ScrollWidth","shouldHidden","isHidden","addEventListener","this","removeEventListener","Navbar","collapseOnSelect","expand","bg","variant","fixed","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","React","Component","SeeMoreButton","text","rel","Button","Advantages","avaData","CardGroup","map","data","Card","key","url","Img","src","Body","Title","title","Text","Footer","footer","Home","Figure","Image","width","height","alt","Caption","EditingWindow","onHide","show","post","status","handleChangePosts","useState","author","body","thisPost","setThisPost","isEmpty","setEmpty","canSubmit","submitType","setSubmitType","changePost","e","target","value","name","useEffect","Modal","size","aria-labelledby","centered","Header","closeButton","Form","Group","Label","Control","type","placeholder","onChange","as","rows","onClick","axios","webAPI","put","whichAPI","then","res","submitPost","catch","err","onError","disabled","DeleteWindow","loadingState","setLoadingState","postId","finalExecution","success","setTimeout","delete","ControllerButton","editingShow","setEditingShow","deleteShow","setDeleteShow","RenderPosts","history","ListGroup","Item","push","Posts","handleCreate","isCreate","method","changeData","createdAt","Date","getTime","filter","console","log","get","sort","a","b","length","Spinner","animation","withRouter","to","ArticleContent","date","toString","Post","match","params","role","About","Jumbotron","App","exact","path","component","PostList","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4875dabd.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport './nav.css';\n\nclass TheNavbar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      positionY: window.pageYOffset,\n      movedY: 0,\n      isHidden: false,\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  handleScroll = () => {\n    const lastPositonY = this.state.positionY; // 取得舊位置\n    this.setState({\n      positionY: window.pageYOffset,\n    }, () => this.calculateScrollWidth(lastPositonY)); // 取得新位置\n  }\n\n  calculateScrollWidth = (lastPositonY) => {\n    const { movedY } = this.state;\n    const ScrollWidth = window.pageYOffset - lastPositonY; // 當前位置扣掉原始位置的高度\n    this.setState({ movedY: movedY + ScrollWidth, }, this.shouldHidden)\n  }\n\n  shouldHidden = () => {\n    const { movedY, positionY } = this.state;\n    if (movedY >= 80) {\n      this.setState({\n        movedY: 0,\n        isHidden: true,\n      })\n    } else if (movedY <= -175 || positionY <= 35) {\n      this.setState({\n        movedY: 0,\n        isHidden: false,\n      })\n    }\n  }\n\n  render() {\n    const { isHidden } = this.state;\n    return (\n      <Navbar\n        collapseOnSelect\n        expand=\"lg\"\n        bg=\"dark\"\n        variant=\"dark\"\n        fixed=\"top\"\n        className={isHidden && \"navbar--hide\"}\n      >\n        <Navbar.Brand href=\"/#\">React-Bootstrap</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/#\">首頁</Nav.Link>\n            <Nav.Link href=\"/#posts\">文章列表</Nav.Link>\n            <Nav.Link href=\"/#about\">關於我</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  };\n}\n\nexport default TheNavbar;\n","import React, { Component } from 'react';\nimport './home.css';\nimport { Button, Figure, Card, CardGroup } from 'react-bootstrap';\n\n\nconst SeeMoreButton = ({ className, text, variant }) => (\n  <a rel=\"noopener noreferrer\" href=\"#/posts\" className={className} >\n    <Button variant={variant} >\n      {text}\n    </Button>\n  </a>\n)\n\nconst Advantages = ({ avaData }) => (\n  <CardGroup>\n    {avaData.map(data => (\n      <Card key={data.url}>\n        <Card.Img variant=\"top\" src={data.url} />\n        <Card.Body>\n          <Card.Title>{data.title}</Card.Title>\n          <Card.Text>\n            {data.text}\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <small className=\"text-muted\"> {data.footer} </small>\n        </Card.Footer>\n      </Card>\n    ))}\n  </CardGroup>\n)\n\nclass Home extends Component {\n\n  render() {\n    const avaData = [\n      {\n        url: 'https://i.imgur.com/YK1x04c.png',\n        title: '文章功能',\n        text: '可以新增、刪除、編輯文章',\n        footer: '更好',\n      },\n      {\n        url: 'https://i.imgur.com/vqvtTgW.png',\n        title: '特效',\n        text: '一點點的特效',\n        footer: '好還要更好',\n      },\n      {\n        url: 'https://i.imgur.com/ze7iutQ.png',\n        title: '不讀檔',\n        text: '網站換頁不讀檔',\n        footer: '更棒了',\n      }\n    ]\n    return (\n      <div className=\"homepage\">\n        <header className=\"homepage__header\">\n          <div className=\"homepage__header--title\" >這就是部落格</div>\n          <div className=\"homepage__header--subtitle\">this is my blog</div>\n          <SeeMoreButton\n            className={\"homepage__header--btn\"}\n            text={\"現在就立刻看更多\"}\n            variant={\"danger\"}\n          />\n        </header>\n        <hr />\n        <main className=\"homepage__main\">\n          <div className=\"main__askwhy\">\n            <div className=\"main__askwhy--content\">\n              <li>你想要寫 BLOG 卻沒地方去？</li>\n              <li>簡單的特效就好，但是市面上的 blog 都很複雜</li>\n              <li>想回到那個美好純真的年代嗎？</li>\n              <li>回歸部落格的本質想寫什麼就寫什麼？</li>\n            </div>\n          </div>\n          <div className=\"main__advantages\">\n            <Advantages avaData={avaData} />\n            <div className=\"main__advantages--btn\">\n              <SeeMoreButton\n                className={\"homepage__header--btn\"}\n                text={\"現在就立刻看更多\"}\n                variant={\"outline-dark\"}\n              />\n            </div>\n          </div>\n          <hr />\n          <div className=\"main__CTA\">\n            <pre className=\"main__CTA--text\">\n              {`\n              寫文章最注重的是什麼？不就是表達出自己內心中想寫的內容就好。\n              就好像一顆大樹，靜靜的吸收養分，然後散發你的靈性，發揮你的淺能。\n              寫吧！孩子\n              `}\n            </pre>\n            <Figure>\n              <Figure.Image\n                width={1920}\n                height={1080}\n                alt=\"1920X1080\"\n                src=\"https://i.imgur.com/Pl30j07.jpg\"\n              />\n              <Figure.Caption>\n                安安靜靜地生長於天地之間，從從容容地經歷著春夏秋冬。一季又一季，一年又一年……不像鮮花那樣嬌貴，從來不懼風吹雨淋。大樹依然屹立，藤蔓永訴纏綿……\n              </Figure.Caption>\n            </Figure>\n            <div className=\"main__CTA-btn\">\n              <SeeMoreButton\n                className={\"homepage__header--btn\"}\n                text={\"立刻就去寫文章\"}\n                variant={\"outline-dark\"}\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n\n  }\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport './editing_window.css';\nimport * as webAPI from '../WebAPI';\n\nconst EditingWindow = ({ onHide, show, post, status, handleChangePosts }) => {\n  const newPost = { title: '', author: '', body: '', };\n  const defaultEmpty = { title: false, author: false, body: false, };\n  const defaultSubmitType = { canSubmit: true, status: '', };\n\n  const [thisPost, setThisPost] = useState(post ? post : newPost);\n  const [isEmpty, setEmpty] = useState(defaultEmpty); // 為了一開始不偵測\n  const [submitType, setSubmitType] = useState(defaultSubmitType);\n  // 一開始先不偵測，因為本身載入的都是有內容的。\n\n  const changePost = (e) => {\n    if (!e.target.value) { // 輸入時確認是否為空\n      setEmpty({ ...isEmpty, [e.target.name]: true, })\n    } else {\n      setEmpty({ ...isEmpty, [e.target.name]: false, })\n    };\n\n    setThisPost({ ...thisPost, [e.target.name]: e.target.value, })\n  };\n\n  const handleSubmit = () => {\n    if (!thisPost.title || !thisPost.author || !thisPost.body) {\n      setSubmitType({ canSubmit: false, status: '資料不全，無法送出，繼續完成資料才可送出', });\n      return;\n    };\n\n    const whichAPI = (thisPost, status) => status === 'create' ?\n      webAPI.createPost(thisPost) : webAPI.updatePost(thisPost);\n\n    const submitPost = (status, thisPost) => {\n      handleChangePosts(status, thisPost); // 改變畫面上的資料\n      onHide();\n    };\n\n    const onError = (err) => {\n      setSubmitType({ canSubmit: false, status: `發生問題無法送出 ${err}`, });\n    };\n\n    whichAPI(thisPost, status)\n      .then(res => res.status <= 300 && submitPost(status, thisPost))\n      .catch(err => onError(err));\n  };\n\n  useEffect(() => {\n    if (thisPost.title && thisPost.author && thisPost.body) {\n      setSubmitType({ canSubmit: true, status: '', });\n    } // render 檢測值是否為空\n  }, [thisPost]);\n\n  return (\n    <Modal\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      {...{ onHide, show } /* 等同於下面 onHide={onHide} show={show} */}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {status === \"editing\" ? \"你正在編輯文章\" : \"你正在新增文章\"}\n        </Modal.Title>\n      </Modal.Header>\n      <Form>\n        <Modal.Body>\n          <Form.Group>\n            <div className=\"form__datatype\">\n              <Form.Label>標題</Form.Label>\n              <Form.Text className=\"form__empty\">\n                {isEmpty.title && '標題不能為空'}\n              </Form.Text>\n            </div>\n            <Form.Control\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Enter title\"\n              value={thisPost && thisPost.title}\n              onChange={changePost}\n            />\n          </Form.Group>\n          <Form.Group>\n            <div className=\"form__datatype\">\n              <Form.Label>作者</Form.Label>\n              <Form.Text className=\"form__empty\">\n                {isEmpty.author && '作者不能為空'}\n              </Form.Text>\n            </div>\n            <Form.Control\n              name=\"author\"\n              type=\"text\"\n              placeholder=\"author/作者\"\n              value={thisPost && thisPost.author}\n              onChange={changePost}\n            />\n          </Form.Group>\n          <Form.Group>\n            <div className=\"form__datatype\">\n              <Form.Label>內文</Form.Label>\n              <Form.Text className=\"form__empty\">\n                {isEmpty.body && '內容不能為空'}\n              </Form.Text>\n            </div>\n            <Form.Control\n              name=\"body\"\n              as=\"textarea\"\n              rows=\"5\"\n              placeholder=\"輸入內文\"\n              value={thisPost && thisPost.body}\n              onChange={changePost}\n            />\n          </Form.Group>\n          <Form.Text className=\"form__empty form__empty--submit\">\n            {submitType.status}\n          </Form.Text>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"outline-secondary\"\n            onClick={onHide}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            onClick={handleSubmit}\n            disabled={!submitType.canSubmit}\n          >\n            {status === 'editing' ? '儲存文章' : '新增文章'}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n}\n\nconst DeleteWindow = ({ onHide, show, post, status, handleChangePosts }) => {\n  const [loadingState, setLoadingState] = useState('是的，我要刪除');\n\n  useEffect(() => {\n    const finalExecution = (success) => { // 根據成功與否改變按鈕的內容\n      success ? setLoadingState('刪除成功！') : setLoadingState('刪除失敗！')\n      setTimeout(() => {\n        success ? handleChangePosts(status, post) : setLoadingState('是的，我要刪除')\n      }, 1000)\n    } /** 放內部就不用使用 useCallback */\n\n    if (loadingState === '刪除中........') {\n      webAPI.deletePost(post.id) // 改變伺服器\n        .then(res => res.status < 300 && finalExecution(true) /* 改變父狀態 */)\n        .catch(() => finalExecution(false))\n    }\n  }, [loadingState, handleChangePosts, post, status]);\n\n  const handleDelete = () => {\n    setLoadingState('刪除中........')\n  }\n\n  return (\n    <Modal\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      {...{ onHide, show }}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          警告！你正在刪除文章\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        你確定要刪除文章嗎？\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-secondary\" onClick={onHide}>\n          不了，我不要刪除\n        </Button>\n        <Button\n          variant=\"outline-danger\"\n          onClick={handleDelete}\n          disabled={loadingState !== '是的，我要刪除'}\n        >\n          {loadingState}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n\n  );\n}\n\nexport { EditingWindow, DeleteWindow };\n","import axios from 'axios';\n\nexport const createPost = post =>\n  axios.post('https://qootest.com/posts/', post);\n\nexport const getPosts = () =>\n  axios.get('https://qootest.com/posts');\n\nexport const getPost = postId =>\n  axios.get('https://qootest.com/posts/' + postId);\n\nexport const updatePost = post =>\n  axios.put('https://qootest.com/posts/' + post.id, post);\n\nexport const deletePost = postId =>\n  axios.delete('https://qootest.com/posts/' + postId);\n","import React, { Component, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { ListGroup, Button, Spinner } from 'react-bootstrap';\nimport './post_list.css';\nimport { EditingWindow, DeleteWindow } from '../editing_window/';\nimport { getPosts } from '../WebAPI';\n\nconst ControllerButton = ({ post, handleChangePosts }) => {\n  const [editingShow, setEditingShow] = useState(false);\n  const [deleteShow, setDeleteShow] = useState(false);\n\n  const handleEdit = () => setEditingShow(true); // 另外寫出來省資源\n  const handleDelete = () => setDeleteShow(true);\n\n  return (\n    <div className=\"blog__controller\">\n      <Button variant=\"outline-success\" onClick={handleEdit} >編輯</Button>\n      {\n        editingShow &&\n        <EditingWindow /** 編輯視窗 */\n          show={editingShow}\n          onHide={() => setEditingShow(false)}\n          status=\"editing\"\n          post={post}\n          handleChangePosts={handleChangePosts}\n        />\n      }\n\n      <Button variant=\"outline-danger\" onClick={handleDelete}>刪除</Button>\n      {\n        deleteShow &&\n        <DeleteWindow\n          show={deleteShow}\n          onHide={() => setDeleteShow(false)}\n          status=\"delete\"\n          post={post}\n          handleChangePosts={handleChangePosts}\n        />\n      }\n    </div>\n  );\n};\n\nconst RenderPosts = ({ data, history, handleChangePosts }) => (\n  <>\n    {\n      data.map(post => (\n        <ListGroup.Item\n          key={post.id}\n          className=\"blog__post\"\n        >\n          <div\n            className=\"blog__title\"\n            onClick={() => history.push(\"/posts/\" + post.id)}\n          >\n            {post.title}\n          </div>\n          <ControllerButton handleChangePosts={handleChangePosts} post={post} />\n        </ListGroup.Item>\n      ))\n    }\n  </>\n)\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isCreate: false,\n    }\n    this.id = 1;\n  }\n\n  handleCreate = (isCreate) => {\n    this.setState({ isCreate, })\n  }\n\n  handleChangePosts = (method, changeData) => {\n    /** 第一個變數是方式，第二個變更的資料 */\n    const { data } = this.state;\n    switch (method) {\n      case 'create':\n        this.setState({\n          data: [{\n            ...changeData,\n            createdAt: new Date().getTime(), // 取得當前的 timestamp，雖然應該會跟伺服器上的不同\n            id: this.id,\n          },\n          ...data, // 放後面才能符合逆排序\n          ],\n        })\n        this.id += 1;\n        break;\n      case 'editing':\n        this.setState({\n          data: data.map((post) => {\n            if (post.id !== changeData.id) return post;\n            return {\n              ...post,\n              ...changeData,\n            };\n          })\n        });\n        break;\n      case 'delete':\n        this.setState({\n          data: data.filter(post => post.id !== changeData.id)\n        })\n        break;\n      default:\n        console.log('一定是搞錯了什麼');\n    }\n  }\n\n  componentDidMount() {\n    getPosts()\n      .then(res => {\n        this.setState({\n          data: res.data\n            .filter(({ title, author, body }) => title && author && body)\n            .sort((a, b) => b.id - a.id),\n        }); // 太多無用資料，決定先篩選之後逆排序\n        this.id = res.data.length !== 0 ? res.data[res.data.length - 1].id + 1 : 1;\n      });\n  }\n\n  render() {\n    const { data, isCreate } = this.state;\n    const { history } = this.props;\n    return (\n      <div className=\"blog\">\n        <header className=\"header\">\n          <div className=\"header__title\">部落格文章</div>\n          <div className=\"header__newpost\">\n            <Button\n              variant=\"outline-primary\"\n              onClick={() => this.handleCreate(true)}\n            >\n              新增文章\n            </Button>\n            {\n              isCreate &&\n              <EditingWindow /* 新增共用編輯視窗 */\n                show={isCreate}\n                onHide={() => this.handleCreate(false)}\n                status=\"create\"\n                handleChangePosts={this.handleChangePosts}\n              />\n            }\n          </div>\n        </header>\n        <main className=\"blog__posts\">\n          {/** 判斷是否讀取中 */\n            data.length ?\n              <RenderPosts\n                data={data}\n                history={history}\n                handleChangePosts={this.handleChangePosts}\n              /> :\n              <Spinner animation=\"border\" />\n          }\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Posts);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, Spinner } from 'react-bootstrap';\nimport './post.css';\n\nconst ControllerButton = () => (\n  <div className=\"article__controller\">\n    <Link to=\"/posts\" className=\"blog__contorller--back\">\n      <Button variant=\"outline-dark\"> back </Button>\n    </Link>\n  </div>\n)\n\nconst ArticleContent = ({ post, date }) => (\n  <>\n    <header className=\"article__header\">\n      <h1>{post.title}</h1>\n      <div className=\"article__meta\">\n        <div className=\"article__info\">\n          <div className=\"article__author\">作者：{post.author}</div>\n          <div className=\"article__created-at\">發布時間：{date.toString()}</div>\n        </div>\n        <ControllerButton />\n      </div>\n    </header>\n    <hr />\n    <p className=\"article__body\">{post.body}</p>\n  </>\n)\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {},\n    }\n  }\n\n  componentDidMount() {\n    const { postId } = this.props.match.params;\n    axios.get('https://qootest.com/posts/' + postId)\n      .then(res => {\n        this.setState({\n          post: res.data,\n        })\n      })\n  }\n\n  render() {\n    const { post } = this.state;\n    const date = new Date(post.createdAt);\n    return (\n      <div className=\"article\">\n        {\n          post.title ?\n            <ArticleContent post={post} date={date} />\n            :\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        }\n      </div>\n    );\n\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport './about.css';\nimport { Jumbotron } from 'react-bootstrap';\n\nfunction About() {\n  return (\n    <div className=\"about\">\n      <Jumbotron>\n        <h1 className=\"about__title\">maxime quas veniam</h1>\n        <pre className=\"about__content\">\n          {`\n          Lorem ipsum dolor sit amet consectetur adipisicing elit.\n          Omnis alias harum voluptatem nostrum vero mollitia cum,\n          voluptas neque praesentium provident quasi, obcaecati enim consequatur illo.\n          Hic autem minus aperiam velit.\n          Ducimus corrupti iusto officia aperiam eius ad neque sit minima ut\n          nostrum aliquideaque qui maxime quas veniam doloremque quaerat repellendus esse,\n          rem dolorum tempora perspiciatis impedit?\n          Possimus omnis pariatur et quia eum molestiae, sint unde,\n          reprehenderit recusandae consequuntur iusto eos quis ipsum veritatis,\n          tempore deleniti totam sunt nisi a!\n          `}\n        </pre>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\nimport './footer.css';\n\nfunction Footer() {\n  return (\n      <footer className=\"footer\">\n      <div className=\"footer__body\">\n        <div className=\"footer_owner\">\n          {`Made with `}\n          <span className=\"footer__icon\">{` ♥ `}</span>\n          {`by `}\n          <a\n            href=\"https://github.com/u88803494\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {`hugh`}\n          </a>\n        </div>\n\n      </div>\n\n\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Nav from './nav/';\nimport Home from './home/';\nimport PostList from './post_list/';\nimport Posts from './posts/';\nimport About from './about/';\nimport Footer from './footer/';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Nav />\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/posts\" component={PostList} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/posts/:postId\" component={Posts} />\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}